generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model category {
  ID_category      String             @id @default(cuid())
  category         String             @db.VarChar(30)
  product_category product_category[]
}

model detail_order_note {
  ID_detail_order_note String     @id @default(cuid())
  qty                  Int        @db.SmallInt
  unit_price           Int
  sub_total            Int
  ID_order_note        String
  ID_product           String
  order_note           order_note @relation(fields: [ID_order_note], references: [ID_order_note], onDelete: NoAction, onUpdate: NoAction, map: "FK_detail_order_note_order_note")
  product              product    @relation(fields: [ID_product], references: [ID_product], onDelete: NoAction, onUpdate: NoAction, map: "FK_product_detail_order_note")

  @@index([ID_order_note], map: "FK_ID_order_note")
  @@index([ID_product], map: "FK_ID_product")
}

model direction {
  ID_direction String   @id @default(cuid())
  ID_store     String
  country      String   @db.VarChar(45)
  region       String   @db.VarChar(45)
  city         String   @db.VarChar(45)
  commune      String?  @db.VarChar(45)
  street       String   @db.VarChar(45)
  number       String   @db.VarChar(45)
  reference    String?  @db.VarChar(45)
  ID_producer  String
  producer     producer @relation(fields: [ID_producer], references: [ID_producer], onDelete: NoAction, onUpdate: NoAction, map: "FK_producer_direction")
  store        store    @relation(fields: [ID_store], references: [ID_store], onDelete: NoAction, onUpdate: NoAction, map: "FK_store_direction")

  @@index([ID_producer], map: "FK_ID_producer")
  @@index([ID_store], map: "FK_ID_store")
}

model order_note {
  ID_order_note     String              @id @default(cuid())
  number            Int
  creation_date     DateTime            @db.DateTime(0)
  modification_date DateTime            @db.DateTime(0)
  neto              Int
  iva               Float
  total             Int
  ID_store          String
  ID_order_status   String
  order_status      order_status        @relation(fields: [ID_order_status], references: [ID_order_status], onDelete: NoAction, onUpdate: NoAction, map: "FK_order_status_order_note")
  store             store               @relation(fields: [ID_store], references: [ID_store], onDelete: NoAction, onUpdate: NoAction, map: "FK_store_order_note")
  detail_order_note detail_order_note[]

  @@index([ID_order_status], map: "FK_ID_order_status")
  @@index([ID_store], map: "FK_ID_store")
}

model order_status {
  ID_order_status String       @id @default(cuid())
  status          String       @db.VarChar(45)
  order_note      order_note[]
}

model type_sale {
  ID_type_sale String     @id @default(cuid())
  type         String     @default("unidad") @db.VarChar(30)
  producer     producer[]
}

model producer {
  ID_producer           String      @id @default(cuid())
  rut                   String      @db.VarChar(10)
  brand_name            String      @db.VarChar(80)
  slogan                String?     @db.VarChar(80)
  history               String?     @db.Text
  min_producer_purchase Int?
  ID_type_sale          String
  business_name         String?     @db.VarChar(80)
  contact_name          String?     @db.VarChar(80)
  phone_producer        Int?
  email_producer        String?     @db.VarChar(80)
  account_type          String?     @db.VarChar(30)
  account_number        BigInt?
  account_bank          String?     @db.VarChar(45)
  account_holder        String?     @db.VarChar(80)
  account_rut           String?     @db.VarChar(10)
  contract_start        DateTime?
  ID_user               String
  isActive              Boolean     @default(true)
  reg_date_producer     DateTime    @default(now())
  update_date_producer  DateTime    @default(now())
  type_sale             type_sale   @relation(fields: [ID_type_sale], references: [ID_type_sale], onDelete: NoAction, onUpdate: NoAction, map: "FK_type_sale_producer")
  user                  user        @relation(fields: [ID_user], references: [ID_user], onDelete: NoAction, onUpdate: NoAction, map: "FK_user_producer")
  direction             direction[]

  product product[]
  @@index([ID_user], map: "FK_ID_user")
  @@index([ID_type_sale], map: "FK_type_sale_producer")
}

model product {
  ID_product           String              @id @default(cuid())
  name                 String              @db.VarChar(100)
  slug                 String?             @db.VarChar(100)
  wholesale_unit_price Int
  unit_cost            Int?
  sale_format          Int?                @db.SmallInt
  description          String?             @db.Text
  duration             Int?                @db.SmallInt
  suggested_sale_price Int?
  min_purchase         Int
  min_qty_purchase     Int?
  benefit              String?             @db.Text
  conservation         String?             @db.VarChar(100)
  stock_quantity       Int?                @db.SmallInt
  offer_price          Int?
  delivery_time        Int?                @db.TinyInt
  modification_date    DateTime?           @db.DateTime(0)
  isActive             Boolean
  ID_user              String
  ID_producer          String
  ID_stock             String
  detail_order_note    detail_order_note[]
  image                image[]
  product_category     product_category[]

  producer producer @relation(fields: [ID_producer], references: [ID_producer], onDelete: NoAction, onUpdate: NoAction, map: "FK_producer_product")
  user     user     @relation(fields: [ID_user], references: [ID_user], onDelete: NoAction, onUpdate: NoAction, map: "FK_user_product")
  stock    stock    @relation(fields: [ID_stock], references: [ID_stock], onDelete: NoAction, onUpdate: NoAction, map: "FK_stock_product")

  @@index([ID_producer], map: "FK_ID_producer")
  @@index([ID_stock], map: "FK_ID_stock")
  @@index([ID_user], map: "FK_ID_user")
}

model image {
  ID_image   String  @id @default(uuid())
  file_image String? @db.VarChar(50)
  name_image String  @db.VarChar(50)
  alt        String
  isMain     Boolean
  ID_product String
  product    product @relation(fields: [ID_product], references: [ID_product], onDelete: NoAction, onUpdate: NoAction, map: "FK_product_image")

  @@index([ID_product], map: "FK_product_image")
}

model product_category {
  ID_product_categoria String   @id @default(cuid())
  ID_category          String
  ID_product           String
  category             category @relation(fields: [ID_category], references: [ID_category], onDelete: NoAction, onUpdate: NoAction, map: "FK_category_product_category")
  product              product  @relation(fields: [ID_product], references: [ID_product], onDelete: NoAction, onUpdate: NoAction, map: "FK_producer_product_category")

  @@index([ID_category], map: "FK_ID_category")
  @@index([ID_product], map: "FK_ID_product")
}

model role {
  ID_role String @id @default(cuid())
  role    String @db.VarChar(45)
  user    user[]
}

model stock {
  ID_stock String    @id @default(cuid())
  status   String    @db.VarChar(45)
  product  product[]
}

model store {
  ID_store      String       @id @default(cuid())
  rut           String       @db.VarChar(10)
  name          String       @db.VarChar(45)
  bussines_name String       @db.VarChar(100)
  phone         String       @db.VarChar(20)
  email         String       @db.VarChar(60)
  contact_name  String?      @db.VarChar(45)
  isActive      Boolean
  ID_user       String
  user          user         @relation(fields: [ID_user], references: [ID_user], onDelete: NoAction, onUpdate: NoAction, map: "FK_user_store")
  direction     direction[]
  order_note    order_note[]

  @@index([ID_user], map: "FK_ID_user")
}

model user {
  ID_user  String     @id @default(cuid())
  email    String     @db.VarChar(60)
  password String     @db.VarChar(15)
  name     String     @db.VarChar(45)
  ID_role  String
  hash     String?    @db.VarChar(250)
  salt     String?    @db.VarChar(250)
  role     role       @relation(fields: [ID_role], references: [ID_role], onDelete: NoAction, onUpdate: NoAction, map: "FK_role_user")
  producer producer[]
  store    store[]

  product product[]
  @@index([ID_role], map: "FK_ID_role")
}
