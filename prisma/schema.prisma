generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Modelo â¬‡

model category {
  ID_category      Int                @id
  category         String             @db.VarChar(30)
  product_category product_category[]
}

model detail_order_note {
  ID_detail_order_note Int        @id
  qty                  Int        @db.SmallInt
  unit_price           Int
  sub_total            Int
  ID_order_note        Int
  ID_product           Int
  order_note           order_note @relation(fields: [ID_order_note], references: [ID_order_note], onDelete: NoAction, onUpdate: NoAction, map: "FK_detail_order_note_order_note")
  product              product    @relation(fields: [ID_product], references: [ID_product], onDelete: NoAction, onUpdate: NoAction, map: "FK_product_detail_order_note")

  @@index([ID_order_note], map: "FK_ID_order_note")
  @@index([ID_product], map: "FK_ID_product")
}

model direction {
  ID_direction Int      @id
  ID_store     Int
  country      String   @db.VarChar(45)
  region       String   @db.VarChar(45)
  city         String   @db.VarChar(45)
  commune      String?  @db.VarChar(45)
  street       String   @db.VarChar(45)
  number       String   @db.VarChar(45)
  reference    String?  @db.VarChar(45)
  ID_producer  Int
  producer     producer @relation(fields: [ID_producer], references: [ID_producer], onDelete: NoAction, onUpdate: NoAction, map: "FK_producer_direction")
  store        store    @relation(fields: [ID_store], references: [ID_store], onDelete: NoAction, onUpdate: NoAction, map: "FK_store_direction")

  @@index([ID_producer], map: "FK_ID_producer")
  @@index([ID_store], map: "FK_ID_store")
}

model order_note {
  ID_order_note     Int                 @id
  number            Int
  creation_date     DateTime            @db.DateTime(0)
  modification_date DateTime            @db.DateTime(0)
  neto              Int
  iva               Float
  total             Int
  ID_store          Int
  ID_order_status   Int
  order_status      order_status        @relation(fields: [ID_order_status], references: [ID_order_status], onDelete: NoAction, onUpdate: NoAction, map: "FK_order_status_order_note")
  store             store               @relation(fields: [ID_store], references: [ID_store], onDelete: NoAction, onUpdate: NoAction, map: "FK_store_order_note")
  detail_order_note detail_order_note[]

  @@index([ID_order_status], map: "FK_ID_order_status")
  @@index([ID_store], map: "FK_ID_store")
}

model order_status {
  ID_order_status Int          @id
  status          String       @db.VarChar(45)
  order_note      order_note[]
}

model producer {
  ID_producer    Int         @id
  rut            String      @db.VarChar(10)
  brand_name     String      @db.VarChar(80)
  slogan         String?     @db.VarChar(80)
  history        String?     @db.Text
  account_type   String?     @db.VarChar(30)
  account_number BigInt?
  account_bank   String?     @db.VarChar(45)
  account_holder String?     @db.VarChar(80)
  account_rut    String?     @db.VarChar(10)
  ID_user        Int
  user           user        @relation(fields: [ID_user], references: [ID_user], onDelete: NoAction, onUpdate: NoAction, map: "FK_user_producer")
  direction      direction[]
  product        product[]

  @@index([ID_user], map: "FK_ID_user")
}

model product {
  ID_product           Int                 @id
  name                 String              @db.VarChar(100)
  picture              String              @db.VarChar(100)
  wholesale_unit_price Int
  sale_format          Int?                @db.SmallInt
  description          String?             @db.Text
  duration             Int?                @db.SmallInt
  suggested_sale_price Int?                @db.SmallInt
  min_purchase         Int                 @db.SmallInt
  benefit              String?             @db.Text
  conservation         String?             @db.VarChar(100)
  stock_quantity       Int?                @db.SmallInt
  offer_price          Int?
  delivery_time        Int?                @db.TinyInt
  modification_date    DateTime?           @db.DateTime(0)
  ID_user              Int
  ID_producer          Int
  ID_stock             Int
  producer             producer            @relation(fields: [ID_producer], references: [ID_producer], onDelete: NoAction, onUpdate: NoAction, map: "FK_producer_product")
  stock                stock               @relation(fields: [ID_stock], references: [ID_stock], onDelete: NoAction, onUpdate: NoAction, map: "FK_stock_product")
  user                 user                @relation(fields: [ID_user], references: [ID_user], onDelete: NoAction, onUpdate: NoAction, map: "FK_user_product")
  detail_order_note    detail_order_note[]
  product_category     product_category[]

  @@index([ID_producer], map: "FK_ID_producer")
  @@index([ID_stock], map: "FK_ID_stock")
  @@index([ID_user], map: "FK_ID_user")
}

model product_category {
  ID_product_categoria Int      @id
  ID_category          Int
  ID_product           Int
  category             category @relation(fields: [ID_category], references: [ID_category], onDelete: NoAction, onUpdate: NoAction, map: "FK_category_product_category")
  product              product  @relation(fields: [ID_product], references: [ID_product], onDelete: NoAction, onUpdate: NoAction, map: "FK_producer_product_category")

  @@index([ID_category], map: "FK_ID_category")
  @@index([ID_product], map: "FK_ID_product")
}

model role {
  ID_role Int    @id
  role    String @db.VarChar(45)
  user    user[]
}

model stock {
  ID_stock Int       @id
  status   String    @db.VarChar(45)
  product  product[]
}

model store {
  ID_store      Int          @id
  rut           String       @db.VarChar(10)
  name          String       @db.VarChar(45)
  bussines_name String       @db.VarChar(100)
  phone         String       @db.VarChar(20)
  email         String       @db.VarChar(60)
  contact_name  String?      @db.VarChar(45)
  ID_user       Int
  user          user         @relation(fields: [ID_user], references: [ID_user], onDelete: NoAction, onUpdate: NoAction, map: "FK_user_store")
  direction     direction[]
  order_note    order_note[]

  @@index([ID_user], map: "FK_ID_user")
}

model user {
  ID_user  Int        @id
  email    String     @db.VarChar(60)
  password String     @db.VarChar(15)
  name     String     @db.VarChar(45)
  ID_role  Int
  hash     String?    @db.VarChar(250)
  salt     String?    @db.VarChar(250)
  role     role       @relation(fields: [ID_role], references: [ID_role], onDelete: NoAction, onUpdate: NoAction, map: "FK_role_user")
  producer producer[]
  product  product[]
  store    store[]

  @@index([ID_role], map: "FK_ID_role")
}
